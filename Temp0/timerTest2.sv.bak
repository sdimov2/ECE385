module timerTest1#
(
		parameter int
		N = 5
)
(
	input button, Clk, 		// Start signal to change to counting state, clock signal
	output countActive, 		// Is equal to the state for whether it's counting
	output countEnd, 			// Goes high when T == T'
	output [N-1:0] countT, 		// Values in counter
	
	output start0 // it won't show up in signaltap and I need to see it
);

logic start, input0;
logic [2:0] startCount;

assign input0 = ~button;

assign start0 = start; // 

logic start1;
assign start1 = start || countT; // Let's see if this can loop infinitely after one start signal.

singleTimer0 myTimers0 [5:0]
(
	.start(start1), .Clk(Clk), 		// Start signal to change to counting state, clock signal
	.countActive(countActive), 		// Is equal to the state for whether it's counting
	.countEnd(countEnd), 			// Goes high when T == T'
	.countT(countT) 		// Values in counter
);

endmodule
